# ┏┳┓┏━┓╻┏ ┏━╸ ┏━╸┏━┓┏┓╻┏━╸
# ┃┃┃┣━┫┣┻┓┣╸  ┃  ┃ ┃┃┗┫┣╸ 
# ╹ ╹╹ ╹╹ ╹┗━╸╹┗━╸┗━┛╹ ╹╹  
# make.conf -- portage config file
#   (c) seytz -- last modified: 03.05.16 21:34
# http://github.com/seytz/dotfiles <-

# system variables
MAKEOPTS="-j9"
CHOST="x86_64-pc-linux-gnu"
CFLAGS="-march=haswell -O2 -pipe"
CPU_FLAGS="aes avx fma3 mmx mmxext popcnt sse sse2 sse3 sse4_1 sse4_2 ssse3"

# drivers variables
INPUT_DEVICES="synaptics evdev"
VIDEO_CARDS="nouveau intel"

# misc
LINGUAS="fr"
EMERGE_DEFAULT_OPTS="--jobs 2 --load-average 2 --ask --verbose"
FEATURES="collision-protect sandbox candy userpriv usersandbox buildsyspkg"
GENTOO_MIRRORS="ftp://ftp.free.fr/mirrors/ftp.gentoo.org/ http://gentoo.mirrors.ovh.net/gentoo-distfiles/ "

# Notes of all possible FEATURES and the respective effects
#  'assume-digests'
#                when commiting work to cvs with repoman(1), assume that all
#                existing SRC_URI digests are correct.  This feature also
#                affects digest generation via ebuild(1) and emerge(1) (emerge
#                generates digests only when the 'digest' feature is enabled).
#  'autoaddcvs'  causes portage to automatically try to add files to cvs
#                that will have to be added later. Done at generation times
#                and only has an effect when 'cvs' is also set.
#  'buildpkg'    causes binary packages to be created of all packages that 
#                are being merged.
#  'ccache'      enables ccache support via CC.
#  'confcache'   enable confcache support; speeds up autotool based configure
#                calls
#  'collision-protect'
#                prevents packages from overwriting files that are owned by
#                another package or by no package at all.
#  'cvs'         causes portage to enable all cvs features (commits, adds),
#                and to apply all USE flags in SRC_URI for digests -- for
#                developers only.
#  'digest'      autogenerate digests for packages when running the emerge(1)
#                command.  If the 'assume-digests' feature is also enabled then
#                existing SRC_URI digests will be reused whenever they are
#                available.
#  'distcc'      enables distcc support via CC.
#  'distlocks'   enables distfiles locking using fcntl or hardlinks. This
#                is enabled by default. Tools exist to help clean the locks
#                after crashes: /usr/lib/portage/bin/clean_locks.
#  'fixpackages' allows portage to fix binary packages that are stored in
#                PKGDIR. This can consume a lot of time. 'fixpackages' is
#                also a script that can be run at any given time to force
#                the same actions.
#  'gpg'         enables basic verification of Manifest files using gpg.
#                This features is UNDER DEVELOPMENT and reacts to features
#                of strict and severe. Heavy use of gpg sigs is coming.
#  'keeptemp'    prevents the clean phase from deleting the temp files ($T) 
#                from a merge.
#  'keepwork'    prevents the clean phase from deleting the WORKDIR.
#  'test'        causes ebuilds to perform testing phases if they are capable
#                of it. Some packages support this automaticaly via makefiles.
#  'metadata-transfer'
#                automatically perform a metadata transfer when `emerge --sync`
#                is run.
#  'noauto'      causes ebuild to perform only the action requested and 
#                not any other required actions like clean or unpack -- for
#                debugging purposes only.
#  'noclean'     prevents portage from removing the source and temporary files 
#                after a merge -- for debugging purposes only. 
#  'nostrip'     prevents the stripping of binaries.
#  'notitles'    disables xterm titlebar updates (which contain status info). 
#  'parallel-fetch'
#                do fetching in parallel to compilation
#  'sandbox'     enables sandboxing when running emerge and ebuild.
#  'strict'      causes portage to react strongly to conditions that are
#                potentially dangerous, like missing/incorrect Manifest files.
#  'userfetch'   when portage is run as root, drop privileges to
#                portage:portage during the fetching of package sources.
#  'userpriv'    allows portage to drop root privileges while it is compiling,
#                as a security measure.  As a side effect this can remove 
#                sandbox access violations for users. 
#  'usersandbox' enables sandboxing while portage is running under userpriv.

PORTAGE_NICENESS=10
AUTOCLEAN="yes"
PORTAGE_ELOG_CLASSES="info warn error log"
PORTAGE_ELOG_SYSTEM="save"

# use flags
USE=" ncurses jpeg png gif tiff X  -emacs vim ipv6 ncurses -gtk alsa -llvm"
