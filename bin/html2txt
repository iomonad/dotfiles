#!/usr/bin/perl
# html2txt
# usage:
#   html2txt foo.html
#   html2txt < foo.html
#   html2txt http://japh.se
use strict;
use warnings FATAL => 'all';
#use encoding 'utf8';
#use utf8;
#use open qw(:std :utf8);

use File::Which ();

my @browsers = map { ucfirst $_ } (
  $ENV{TERM} eq 'linux'
    ? File::Which::which('html2text') ? 'html2text' : ((), qw(lynx w3m links))
    : qw(w3m lynx links elinks)
);

my($subclass, @err);
for my $browser(@browsers) {
  eval "require HTML::FormatText::$browser";
  if($@) {
    push(@err, "$browser: $@");
    next;
  }
  else {
    $subclass = $browser;
    last;
  }
  die "Found no suitable parsers:\n", map { "  $_\n" } @err;
}

my $html_str = do {
  local $/;
  my $fh;
  if(@ARGV) {
    if($ARGV[0] =~ m{(https?://(?:www[.])?.+)} and ! -e $1) {
      require LWP::Simple;
      my $content = LWP::Simple::get($ARGV[0]);
      open($fh, '<', \$content) or die $!;
    }
    else {
      open($fh, '<', $ARGV[0]) or die $!;
    }
  }
  else {
    $fh = *STDIN
  }
  <$fh>;
};

print "HTML::FormatText::$subclass"->format_string(
  $html_str,
  rightmargin    => 78,
  leftmargin     => 0,
  #output_charset => 'utf-8',
);
